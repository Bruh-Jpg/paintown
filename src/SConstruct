Import('use');

def isWindows():
    import re
    import sys
    return "win32" in sys.platform

obj_files = []

def addFiles( files ):
    obj_files.append( map( lambda x: x.replace('src/', ''), files ) )

import sys
sys.path.append("../scons")
import helpers

obj_files = []

filelist = helpers.read_cmake_list("../cmake/FileList.cmake")

for i in filelist:
    addFiles(filelist[i])

use.Append(YACCFLAGS = ["-d"])
use['YACCHXXFILESUFFIX'] = '.hh'

def isH(name):
    return name.endswith(".hpp") or name.endswith(".hh") or name.endswith(".h")

# print use['BUILDERS']

lex = use.CFile('mugen/lex', 'mugen/lex.l')
yacc = filter(lambda s: not isH(s.path), use.CXXFile('mugen/parse', 'mugen/parse.yy'))
use.Depends(lex, yacc)
# obj_files.append(use.CFile('mugen/lex', 'mugen/lex.l'))
#obj_files.append(use.CXXFile('mugen/lex', 'mugen/lex.ll'))
obj_files.append([yacc, lex])

def icon():
    if isWindows():
        return ['windows/game.res']
    else:
        return []

x = []
x.append(use.Program( 'paintown', obj_files + ['xmain.cpp'] + icon()))
#x.append( use.Program( 'test', obj_files + ['test.cpp'] ) )
#x.append( use.Program( 'menutest', obj_files + ['menu/menutest.cpp'] ) )
x.append( use.Program( 'mugentest', obj_files + ['mugen/test.cpp'] ) )
# x.append( use.Program( 'mugentest2', obj_files + ['mugen/test2.cpp'] ) )

Return( 'x' )
