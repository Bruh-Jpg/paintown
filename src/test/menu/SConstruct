Import('use')

testEnv = use.Clone()
# testEnv.VariantDir('test', '../../', duplicate = False)
testEnv.VariantDir('test', '../../')

more_files = []
def addObjects(files):
    more_files.extend(files)

use = testEnv
SConscript('../../mugen/parser/SConstruct', exports = ['use', 'addObjects'], variant_dir = 'test-parser')

source = Split("""
test.cpp
init.cpp
test/util/file-system.cpp
test/menu/menu.cpp
test/menu/actionfactory.cpp
test/menu/optionfactory.cpp
test/menu/action_speed.cpp
test/menu/menu_option.cpp
test/menu/menu_action.cpp
test/menu/options.cpp
test/globals.cpp
test/exceptions/exception.cpp
test/util/token.cpp
test/util/tokenreader.cpp
test/util/token_exception.cpp
test/mugen/ast/ast.cpp
test/menu/font-info.cpp
test/util/input/keyboard.cpp
test/util/bitmap.cpp
test/util/funcs.cpp
test/util/input/input-manager.cpp
test/util/input/joystick.cpp
test/util/debug.cpp
test/openbor/pack-reader.cpp
test/openbor/util.cpp
test/openbor/mod.cpp
test/configuration.cpp
test/util/load_exception.cpp
test/util/events.cpp
test/util/message-queue.cpp
test/util/thread.cpp
test/util/input/allegro/allegro-joystick.cpp
test/util/input/sdl/joystick.cpp
test/paintown-engine/level/block.cpp
test/paintown-engine/level/cacher.cpp
test/paintown-engine/level/scene.cpp
test/paintown-engine/level/blockobject.cpp
test/paintown-engine/level/random-scene.cpp
test/paintown-engine/level/utils.cpp
test/util/sound.cpp
test/factory/object_factory.cpp
test/paintown-engine/environment/atmosphere.cpp
test/util/resource.cpp
test/paintown-engine/object/actor.cpp
test/paintown-engine/object/animation.cpp
test/paintown-engine/object/animation_event.cpp
test/paintown-engine/object/animation_trail.cpp
test/paintown-engine/object/attack.cpp
test/paintown-engine/object/buddy_player.cpp
test/paintown-engine/object/cat.cpp
test/paintown-engine/object/character.cpp
test/paintown-engine/object/display_character.cpp
test/paintown-engine/object/draw-effect.cpp
test/paintown-engine/object/effect.cpp
test/paintown-engine/object/enemy.cpp
test/paintown-engine/object/gib.cpp
test/paintown-engine/object/health_stimulation.cpp
test/paintown-engine/object/heart.cpp
test/paintown-engine/object/item.cpp
test/paintown-engine/object/network_character.cpp
test/paintown-engine/object/network_player.cpp
test/paintown-engine/object/object_attack.cpp
test/paintown-engine/object/object.cpp
test/paintown-engine/object/object_nonattack.cpp
test/paintown-engine/object/player-common.cpp
test/paintown-engine/object/player.cpp
test/paintown-engine/object/projectile.cpp
test/paintown-engine/object/stimulation.cpp
test/paintown-engine/object/versus_enemy.cpp
test/paintown-engine/object/versus_player.cpp
test/nameplacer.cpp
test/util/font.cpp
test/network/network.cpp
test/util/system.cpp
test/factory/font_factory.cpp
test/gui/context-box.cpp
test/gui/tabbed-box.cpp
test/gui/animation.cpp
test/gui/widget.cpp
test/gui/popup-box.cpp
test/util/gradient.cpp
test/gui/box.cpp
test/gui/coordinate.cpp
test/util/ftalleg.cpp
test/util/ebox.cpp
test/factory/font_render.cpp
test/script/script.cpp
test/factory/heart_factory.cpp
test/util/timedifference.cpp
test/util/language-string.cpp
test/paintown-engine/trigger/trigger.cpp
test/paintown-engine/game/select_player.cpp
test/paintown-engine/game/mod.cpp
test/util/fire.cpp
test/paintown-engine/game/adventure_world.cpp
test/paintown-engine/game/console.cpp
test/paintown-engine/game/game.cpp
test/util/music.cpp
test/util/music-player.cpp
test/util/loading.cpp
test/util/messages.cpp
test/util/ogg/logg.c
test/paintown-engine/game/versus_world.cpp
test/paintown-engine/game/world.cpp
test/factory/shadow.cpp
test/mugen/config.cpp
test/network/server.cpp
test/network/client.cpp
test/network/chat_client.cpp
test/network/chat_server.cpp
test/network/network_world_client.cpp
test/network/network_world.cpp
test/network/chat-widget.cpp
test/network/cacher.cpp
test/util/input/text-input.cpp
test/util/input/input.cpp
test/gui/lineedit.cpp
test/gui/keys.cpp
test/gui/keyinput_manager.cpp
test/gui/timer.cpp
test/gui/keyinput.cpp
test/gui/al_keyinput.cpp
test/mugen/exception.cpp
test-parser/air.cpp
test-parser/def.cpp
test-parser/cmd.cpp
test/mugen/util.cpp
test/mugen/animation.cpp
test/mugen/sprite.cpp
test/mugen/sound.cpp
test/mugen/item.cpp
test/mugen/item-content.cpp
test/util/regex.cpp
test/util/timer.cpp
test/mugen/game.cpp
test/mugen/behavior.cpp
test/mugen/storyboard.cpp
test/gui/fadetool.cpp
test/mugen/character-select.cpp
test/mugen/character.cpp
test/mugen/helper.cpp
test/mugen/evaluator.cpp
test/mugen/compiler.cpp
test/mugen/state-controller.cpp
test/mugen/parse-cache.cpp
test/mugen/command.cpp
test/mugen/stage.cpp
test/mugen/font.cpp
test/mugen/background.cpp
test/gui/rectarea.cpp
test/mugen/reader.cpp
test/mugen/characterhud.cpp
test/mugen/section.cpp
test/mugen/menu.cpp
test/mugen/option-arcade.cpp
test/mugen/option-versus.cpp
test/mugen/option-options.cpp
test/util/loadpng/loadpng.c
test/util/loadpng/regpng.c
test/util/loadpng/savepng.c
test/factory/collector.cpp
""")

source.append(use.Peg('test/openbor/data.peg'))

x = []
x.append(testEnv.Program('menu', source))
# x.append(testEnv.Program('load-stage', stage_source))
Return('x')
