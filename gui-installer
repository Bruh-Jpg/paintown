#!/usr/bin/env python
# -*- coding: utf-8 -*-

# GTK or QT based installer

# Copy files to some directory, symlink the binary.

import sys

from PyQt4 import QtCore, QtGui, uic
from PyQt4.QtCore import *
from PyQt4.QtGui import *

app = QtGui.QApplication(sys.argv)

# Set the look and feel
QtGui.QApplication.setStyle(QtGui.QStyleFactory.create("Cleanlooks"))

# Load the installer widgets dynamically
binLocation = ['/usr/share/games/paintown']
dataLocation = ['/usr/games']
currentPage = [0]
eula = [False]
widget = uic.loadUi("installer/installer.ui")

#Back function
def backButton():
    currentPage[0] -= 1
    if currentPage[0] < 0:
        currentPage[0] = 0
    widget.stackedWidget.setCurrentIndex(currentPage[0])

#Forward function
def forwardButton():
    currentPage[0] += 1
    if currentPage[0] > 1 and not eula[0]:
        currentPage[0] = 1
    if currentPage[0] > 4:
        currentPage[0] = 4
    widget.stackedWidget.setCurrentIndex(currentPage[0])

#Set User agreement
def toggleEula():
    eula[0] = not eula[0]

#Select Binary Directory
def selectBinDirectory():
    tempstr = QFileDialog.getExistingDirectory(widget, 'Please Select Binary Directory', binLocation[0], QFileDialog.ShowDirsOnly)
    if not tempstr == '':
        binLocation[0] = tempstr
        widget.binDir.setText(tempstr)

#Select Data Directory
def selectDataDirectory():
    tempstr = QFileDialog.getExistingDirectory(widget, 'Please Select Data Directory', dataLocation[0], QFileDialog.ShowDirsOnly)
    if not tempstr == '':
        dataLocation[0] = tempstr
        widget.dataDir.setText(tempstr)

# Update the widgets with the needed Info
widget.connect(widget.back, SIGNAL("clicked()"), backButton)
widget.connect(widget.next, SIGNAL("clicked()"), forwardButton)
widget.connect(widget.eula, SIGNAL("clicked()"), toggleEula)
widget.connect(widget.changeBinDir, SIGNAL("clicked()"), selectBinDirectory)
widget.connect(widget.changeDataDir, SIGNAL("clicked()"), selectDataDirectory)
widget.back.setShortcut('Alt+B')
widget.next.setShortcut('Alt+N')

# Exit installer
exit = QtGui.QAction('Exit', widget)
exit.setShortcut('Ctrl+Q')
exit.setStatusTip('Quit Installer')
widget.connect(exit, SIGNAL('triggered()'), SLOT('close()'))
widget.file.addAction(exit)

# Page 1 - Intro and graphic
scene = QGraphicsScene()
scene.addPixmap(QPixmap('data/menu/paintown.png'))
widget.WelcomePage.setScene(scene)
#widget.WelcomePage.scale(1,1)
widget.WelcomePage.fitInView(0, 0, 94,29)
widget.WelcomePage.setHorizontalScrollBarPolicy(Qt.ScrollBarAlwaysOff)
widget.WelcomePage.setVerticalScrollBarPolicy(Qt.ScrollBarAlwaysOff)

# Page 2 - End User Agreement or License
widget.textBrowser.setPlainText(QString(open(str('README')).read()))
#widget.textBrowser.selectAll()
#widget.textBrowser.setAlignment(Qt.AlignCenter)
#widget.textBrowser.moveCursor(QTextCursor.Start)

# Page 3 - Install Locations
widget.binDir.setText(binLocation[0])
widget.dataDir.setText(dataLocation[0])

# Page 4 - Console Output

# Page 5 - Finished

# show widget
widget.show()

# Run
app.exec_()


